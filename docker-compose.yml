version: '3'
services:
  mysql:
    build:
      context: ../bot-detector-mysql
      dockerfile: Dockerfile
    image: bot-detector/bd-mysql:latest
    environment:
      - MYSQL_ROOT_PASSWORD=root_bot_buster
      - MYSQL_USER=botssuck
      - MYSQL_PASSWORD=botdetector
    volumes:
      - '../bot-detector-mysql/mount:/var/lib/mysql'
      - '../bot-detector-mysql/docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d/'
    ports:
      - "3306:3306"
    networks:
      - botdetector-network
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root -proot_bot_buster"]
      interval: 10s
      retries: 3
      start_period: 30s
      timeout: 5s

  mysql_setup:
    container_name: mysql_setup
    image: bot-detector/mysql_setup
    build:
      context: ../private-api/mysql_setup
    command: ["python", "-u","setup_mysql.py"]
    networks:
      - botdetector-network
    depends_on:
      mysql:
        condition: service_healthy

  api:
    build:
      context: ../Bot-Detector-Core-Files
      dockerfile: Dockerfile
      args:
        root_path: ''
        api_port: 5000
    image: bot-detector/bd-api:latest
    environment:
      - sql_uri=mysql+asyncmy://root:root_bot_buster@mysql:3306/playerdata
      - discord_sql_uri=mysql+asyncmy://root:root_bot_buster@mysql:3306/discord
      - token=verify_ban
    volumes:
      - '../Bot-Detector-Core-Files/api:/code/api'
    ports:
      - "5000:5000"
    networks:
      - botdetector-network
    depends_on:
      - mysql

  private_api:
    container_name: private_api
    build:
      context: ../private-api
      dockerfile: Dockerfile
      target: base
      args:
        root_path: /
        api_port: 5001
    command: uvicorn src.core.server:app --host 0.0.0.0 --reload --reload-include src/*
    ports:
      - 5001:5001
    networks:
      - botdetector-network
    # this overrides the env_file for the specific variable
    environment:
      - KAFKA_HOST=kafka:9092
      - DATABASE_URL=mysql+aiomysql://root:root_bot_buster@mysql:3306/playerdata
      - ENV=DEV
      - POOL_RECYCLE=60
      - POOL_TIMEOUT=30
    volumes:
      - ../private-api/src:/project/src
    depends_on:
      - mysql

  machine_learning:
    build:
      context: .
      dockerfile: Dockerfile
      target: base
      args:
        root_path: /
        api_port: 8000
    container_name: bd-ml
    command: uvicorn api.app:app --host 0.0.0.0 --reload --reload-include api/*
    env_file:
      - .env
    volumes:
      - ./api:/project/api
    ports:
      - 8000:8000
    networks:
      - botdetector-network
    depends_on:
      - api
      - private_api

networks:
  botdetector-network:
